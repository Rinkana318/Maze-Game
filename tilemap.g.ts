// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`100010000608080808080808080808080808080705010101010101010b01010101010103050102020202020202020202020201030501020202020202020202020202010305010202010102020202010102020103050102020101020202020101020201030501020202020202020202020202010305010202020202020202020202020103050102020202020202020202020201030501020202020202020202020202010305010202010102020202010102020103050102020101020202020101020201030501020202020202020202020202010305010202020202020202020202020103050101010101010101010101010101030a040404040404040404040404040409`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 2 . . 2 2 . . . . 2 2 . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.greenOuterNorth0,sprites.dungeon.floorDark0,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundNorthEast1,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundSouthEast1,sprites.dungeon.darkGroundSouthWest1,sprites.dungeon.greenSwitchUp], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
222222222222222222222222222222222
2.......2...2...2...2...........2
2.22222.2.222.222.222.2.2222222.2
2.2...2.2...2.2.......2...2.....2
2.2.2.22222.2.2.222222222.2.222.2
2...2...2.....2.....2.......2...2
2.22222.2.2222222.2.2.22222.2.222
2.2...2...2.2...2.2.2.......2.2.2
2.2.2222222.2.2.222.2222222.2.2.2
2.2...........2.....2...2...2...2
2.222.2.2222222222222.2.2.222.222
2...2.2...2.........2.2.2.2.2...2
222.2.222.2.2222222.2.2.2.2.222.2
2...2...2.2.2.........2.2...2...2
2.22222.2.2.2.222222222.22222.222
2.2...2.2.2...2...2.2...2.......2
2.222.2.2.222.2...2.2.2.2.2.222.2
2...2.2.2.2...2...2...2...2...2.2
222.2.2.222.22222.2.22222222222.2
2.2.2.............2...2...2...2.2
2.2.22222.2222222.222.2.2.2.2.2.2
2.2...2...2...2.....2...2...2...2
2.222.22222.222.22222222222.2.222
2.2.2.....2.................2.2.2
2.2.22222.2222222222222.22222.2.2
2...2...2.2...2...2...2.2.....2.2
222.2.2.2.2.2.2.2.2.2.222.22222.2
2...2.2.2.2.2.2.2...2.......2.2.2
2.222.222.2.2.2.2.222222222.2.2.2
2...2...2...2...2.2...2...2.....2
2.2.2.2.222222222.2.2.2.2.22222.2
2.2...2.............2...2.......2
222222222222222222222222222222222
.................................
`, [myTiles.transparency16,sprites.dungeon.greenOuterNorth0,sprites.dungeon.floorDark0,sprites.dungeon.collectibleInsignia,sprites.dungeon.greenSwitchUp,sprites.dungeon.greenSwitchDown,sprites.dungeon.greenOuterNorth2,sprites.dungeon.greenOuterNorth1,sprites.dungeon.chestClosed], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
